<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sagebionetworks</groupId>
		<artifactId>platform</artifactId>
		<version>0.1</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>integration-test</artifactId>
	<packaging>pom</packaging>
	<version>0.1</version>
	<name>Integration Tests for All services</name>

	<properties>
		<org.springframework.version>3.0.5.RELEASE</org.springframework.version>
		<tomcat-version>6.0.32</tomcat-version>
		<tomcat-file>apache-tomcat-${tomcat-version}</tomcat-file>
		<!-- This is where the repository war will be deployed -->
		<sage.repository.deploy>services-repository-${project.version}</sage.repository.deploy>
	</properties>



	<build>
		<plugins>
			<!-- *** Compiler plugin: we must force test compile because we're using 
				a pom packaging that doesn't have this lifecycle mapping. -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- This allows use to run the servlet container from maven via mvn tomcat:run 
				or deploy to a local tomcat via tomcat:deploy -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<configuration>
					<!-- Deploy this as the root application -->
					<path>/</path>
				</configuration>
			</plugin>

			<!-- *** Surefire plugin: run unit and exclude integration tests *** -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- *** Failsafe plugin: run integration tests *** -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- *** Cargo plugin: start/stop application server and deploy the ear 
				file before/after integration tests *** -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.0.6</version>
				<configuration>
					<wait>false</wait>
					<!-- Container configuration -->
					<container>
						<containerId>tomcat6x</containerId>
						<!-- Download and install tomcat -->
						<zipUrlInstaller>
							<url>http://download.filehat.com/apache/tomcat/tomcat-6/v${tomcat-version}/bin/${tomcat-file}.zip</url>
							<installDir>${project.build.directory}/tomcat6x/container</installDir>
						</zipUrlInstaller>
					</container>
					<configuration>
						<type>standalone</type>
						<home>${project.build.directory}/tomcat6x/container/${tomcat-file}/bin</home>
						<deployables>
							<deployable>
								<groupId>org.sagebionetworks</groupId>
								<artifactId>services-repository</artifactId>
								<type>war</type>
								<!-- url to ping to know if deployable is done ornot -->
								<pingURL>http://localhost:8080/${sage.repository.deploy}/repo/v1/dataset/test</pingURL>
								<!-- How long do we wait until the we timeout (in ms) -->
								<pingTimeout>2000</pingTimeout>
							</deployable>
						</deployables>
					</configuration>

				</configuration>

				<executions>
					<!-- before integration tests are run: start server -->
					<execution>
						<id>start-container</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<!-- after integration tests are run: stop server -->
					<execution>
						<id>stop-container</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
	<dependencies>

		<!-- Sage Bionetworks Dependencies -->
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>services-repository</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>portal</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>1.5-ea09</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

</project>
