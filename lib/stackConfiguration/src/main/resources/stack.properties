# Passwords and credentials do not belong in these files, pass them as VM args instead

# All default properties belong in this file

#---- Endpoint configuration
# Crowd url must include protocol (http or https) and port (e.g. 8443)
org.sagebionetworks.crowd.endpoint=https://dev-crowd.sagebase.org:8443
org.sagebionetworks.authenticationservice.privateendpoint=${org.sagebionetworks.authenticationservice.privateendpoint}
org.sagebionetworks.authenticationservice.publicendpoint=${org.sagebionetworks.authenticationservice.publicendpoint}
org.sagebionetworks.repositoryservice.endpoint=${org.sagebionetworks.repositoryservice.endpoint}
org.sagebionetworks.portal.endpoint=${org.sagebionetworks.portal.endpoint}

#---- S3 configuration
org.sagebionetworks.s3.readAccessExpiryHours=24
org.sagebionetworks.s3.writeAccessExpiryHours=24
org.sagebionetworks.s3.bucket=devThisIsAFakeS3Bucket

#--- encrypted values (passwords, credentials):
#
# to generate an encrypted property value:
# mvn exec:java -Dexec.mainClass="org.sagebionetworks.StringEncrypter" -Dexec.args="MySecretPassword common-encryption-key-for-stack"
# returns 
# MySecretPassword -> PZnry4SROFQVIq1up8DIt8uxV8TkD0Ve
# The actual encryption key is saved in work/platform/PasswordsAndCredentials/platformPropertyEncryptionKey.txt

# application API Key, used for Crowd REST API  NOTE:  This is for the dev instance of Crowd
# 8-8-2011 commented out the following, since it's defined in another .properties file
# org.sagebionetworks.crowdApplicationKey=YJxbfSsxenhUbwz9IVQaOA==

org.sagebionetworks.id.generator.database.driver=com.mysql.jdbc.Driver
org.sagebionetworks.repository.databaes.driver=com.mysql.jdbc.Driver

# The repository connection pool properties.
org.sagebionetworks.pool.connection.validate=true
# This is the SQL that will be used to determine if a connection is alive.
org.sagebionetworks.pool.connection.validate.sql=SELECT 1
# The minimum number of connections maintained by the connection pool.
org.sagebionetworks.pool.min.number.connections=2
# The maximum number of connections the connection pool will created
org.sagebionetworks.pool.max.number.connections=40

# JDOPersistenceManager configuration properties.
javax.jdo.PersistenceManagerFactoryClass=org.datanucleus.jdo.JDOPersistenceManagerFactory
datanucleus.NontransactionalRead=true
datanucleus.NontransactionalWrite=true
javax.jdo.option.RetainValues=true
datanucleus.autoCreateSchema=true
datanucleus.validateConstraints=false
datanucleus.validateTables=false
datanucleus.transactionIsolation=read-committed

org.sagebionetworks.integration.test.username.one=devUser1@sagebase.org
org.sagebionetworks.integration.test.password.one=password
org.sagebionetworks.integration.test.username.two=devUser2@sagebase.org
org.sagebionetworks.integration.test.password.two=password
org.sagebionetworks.integration.test.username.admin=devUserAdmin@sagebase.org
org.sagebionetworks.integration.test.password.admin=password

#AmazonWebServices CloudWatch Profiler 
org.sagebionetworks.cloud.watch.report.enabled=false

#AmazonWebServices CloudWatch Profiler's Trigger time in milliseconds
org.sagebionetworks.cloud.watch.trigger=60000

# The maximum number of threads used by the backup/restore daemon thread pool.
# Set this to an even number since two threads are used for each daemon.
org.sagebionetworks.backup.restore.thread.pool.maximum=10

# The maximum number of bytes allowed for a query result.  Currently set to 500 KB.
org.sagebionetworks.maximum.bytes.per.query.result=512000

# The maximum number entities returned in a single call
org.sagebionetworks.maximum.number.entities.returned.per.call=20

# This is a size limit on a single entity.
# Note: The number can never be decreased, so increase with care.
org.sagebionetworks.maximum.number.bytes.per.entity=1024000

# This is the shared bucket for all backup files.
org.sagebionetworks.shared.s3.backup.bucket=shared.backups.sagebase.org




